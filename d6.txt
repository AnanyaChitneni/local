//matrix chain mul hackerrank
#include <stdio.h>
#include <limits.h>

int main() {
    int n;
    scanf("%d", &n);
    int p[n + 1];
    for (int i = 0; i <= n; i++) {
        scanf("%d", &p[i]);
    }

    int m[n + 1][n + 1];

    for (int i = 1; i <= n; i++)
        m[i][i] = 0;

    for (int l = 2; l <= n; l++) {
        for (int i = 1; i <= n - l + 1; i++) {
            int j = i + l - 1;
            m[i][j] = INT_MAX;
            for (int k = i; k < j; k++) {
                int q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];
                if (q < m[i][j])
                    m[i][j] = q;
            }
        }
    }

    printf("%d\n", m[1][n]);

    return 0;
}
















//online compiler
#include <stdio.h>
#include <limits.h>

void matrix(int p[], int n) {
    int m[n][n];
    for (int i = 1; i < n; i++)
        m[i][i] = 0;
    for (int l = 2; l < n; l++) {
        for (int i = 1; i < n - l + 1; i++) {
            int j = i + l - 1;
            m[i][j] = INT_MAX;
            for (int k = i; k < j; k++) {
                int q = m[i][k] + m[k+1][j] + p[i-1]*p[k]*p[j];
                if (q < m[i][j]) {
                    m[i][j] = q;
                }
            }
        }
    }
    printf("Min multiplications:%d\n", m[1][n-1]);
}

int main() {
    int n;
    printf("Enter no of matrices\n");
    scanf("%d", &n);
    int p[n+1];
    printf("Enter dimensions\n");
    for (int i = 0; i < n+1; i++)
        scanf("%d", &p[i]);
    matrix(p, n+1);
    return 0;
}






output:
Enter no of matrices
4
Enter dimensions
10 20 30 40 50
Min multiplications:38000


=== Code Execution Successful ===
