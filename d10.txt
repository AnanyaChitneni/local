//nqueens hackerrank
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void nq(int k, int n, int x[]);
int Place(int k, int i, int x[]);

int main() {
    int n;
    scanf("%d", &n);
    int *x = (int*)malloc(n * sizeof(int));
    int k = 0;
    nq(k, n, x);
    free(x);
    return 0;
}

void nq(int k, int n, int x[]) {
    for(int i = 0; i < n; i++) {
        if(Place(k, i, x)) {
            x[k] = i;
            if(k == n - 1) {
                for(int j = 0; j < n; j++) {
                    
                    printf("%d ", x[j] + 1);
                }
                printf("\n");
            } else {
                nq(k + 1, n, x);
            }
        }
    }
}

int Place(int k, int i, int x[]) {
    for(int j = 0; j < k; j++) {
        if(x[j] == i || abs(x[j] - i) == abs(j - k)) {
            return 0;
        }
    }
    return 1;
}








//online compiler
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void nq(int k, int n, int x[]);
int Place(int k, int i, int x[]);

int main() {
    int n;
    printf("Enter no of queens\n");
    scanf("%d", &n);
    int *x = (int*)malloc(n * sizeof(int));
    int k = 0;
    nq(k, n, x);
    free(x);
    return 0;
}

void nq(int k, int n, int x[]) {
    for(int i = 0; i < n; i++) {
        if(Place(k, i, x)) {
            x[k] = i;
            if(k == n - 1) {
                for(int j = 0; j < n; j++) {
                    printf("%d ", x[j]);
                }
                printf("\n");
            } else {
                nq(k + 1, n, x);
            }
        }
    }
}

int Place(int k, int i, int x[]) {
    for(int j = 0; j < k; j++) {
        if(x[j] == i || abs(x[j] - i) == abs(j - k)) {
            return 0;
        }
    }
    return 1;
}






output:
Enter no of queens
4
1 3 0 2 
2 0 3 1 


=== Code Execution Successful ===
