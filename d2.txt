//prims hackerrank

int prims(int n, int edges_rows, int edges_columns, int** edges, int start) {
    int cost[n + 1][n + 1];
    int near[n + 1];
    int i, j, k, u = -1, v = -1, min;
    int mincost = 0;

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            cost[i][j] = INT_MAX;

    for (i = 0; i < edges_rows; i++) {
        int a = edges[i][0];
        int b = edges[i][1];
        int c = edges[i][2];
        if (c < cost[a][b])
            cost[a][b] = cost[b][a] = c;
    }

    for (i = 1; i <= n; i++) {
        near[i] = start;
    }
    near[start] = 0;

    for (i = 1; i < n; i++) {
        min = INT_MAX;
        for (j = 1; j <= n; j++) {
            if (near[j] != 0 && cost[j][near[j]] < min) {
                min = cost[j][near[j]];
                u = j;
            }
        }
        mincost += cost[u][near[u]];
        near[u] = 0;

        for (k = 1; k <= n; k++) {
            if (near[k] != 0 && cost[k][near[k]] > cost[k][u]) {
                near[k] = u;
            }
        }
    }

    return mincost;
}










//online compiler

