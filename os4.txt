//single level
#include<stdio.h>
#include<string.h>

int main()
{
	int i,j=0,ch,n;
	char dirname[10],fname[10][10],name[10];
	printf("Enter dir name\n");
	scanf("%s",dirname);
	printf("Enter no of files\n");
	scanf("%d",&n);
	do
	{
		printf("Enter the name of the file\n");
		scanf("%s",&name);
		for(i=0;i<n;i++)
		{
			if(!strcmp(fname[i],name))
			   break;
		}
		if(i==n)
		   strcpy(fname[j++],name);
		else
		  printf("The file name already exists!\n");
		
		printf("Do you want to add another file(0/1)\n");
		scanf("%d",&ch);
	}while(ch!=0);
	printf("The directory:%s\nFiles:\n",dirname);
	for(i=0;i<j;i++)
	   printf("%s\n",fname[i]);
	return 0;
}









//two level
#include<stdio.h>
#include<string.h>

struct dir
{
	char dname[10], fname[10][10];
	int fcount;
} dirs[10];

int main()
{
	int dcount = 0, ch, i, j;
	char f[10], d[10];
	do
	{
		printf("\n1. Create Directory\t2. Create File\t3. Display\t4. Exit\n");
		printf("Enter your choice: ");
		scanf("%d", &ch);

		switch(ch)
		{
			case 1:
				printf("Enter directory name: ");
				scanf("%s", dirs[dcount].dname);
				printf("Directory '%s' created.\n", dirs[dcount].dname);
				dirs[dcount].fcount = 0;
				dcount++;
				break;

			case 2:
				printf("Enter directory name: ");
				scanf("%s", d);
				for(i = 0; i < dcount; i++)
				{
					if(strcmp(d, dirs[i].dname) == 0)
					{
						printf("Enter file name: ");
						scanf("%s", dirs[i].fname[dirs[i].fcount]);
						printf("File '%s' created in directory '%s'.\n", dirs[i].fname[dirs[i].fcount], dirs[i].dname);
						dirs[i].fcount++;
						break;
					}
				}
				if(i == dcount)
					printf("Directory '%s' does not exist!\n", d);
				break;

			case 3:
				printf("\n%-15s %s\n", "Directory", "Files");
				printf("-----------------------------------\n");
				for(i = 0; i < dcount; i++)
				{
					printf("%-15s ", dirs[i].dname);
					for(j = 0; j < dirs[i].fcount; j++)
					{
						printf("%s  ", dirs[i].fname[j]);
					}
					printf("\n");
				}
				break;

			case 4:
				ch = 0;
				break;

			default:
				printf("Invalid choice!\n");
		}

		if(ch != 0)
		{
			printf("\nDo you wish to continue (1 for Yes / 0 for No)? ");
			scanf("%d", &ch);
		}

	} while(ch != 0);

	return 0;
}










//hierarchial
#include<stdio.h>
#define max 10
int folders[max][3],files[max][2];
int foldcount = 0, filescount = 0;

void createDir(int name,int size)
{
	int i,n;
	foldcount++;
	for(i=0;i<size;i++)
	{
		printf("Enter name and size under dir %d\n",name);
		scanf("%d%d",&folders[foldcount][0],&folders[foldcount][1]);
		folders[foldcount][2] = name;
		if(folders[foldcount][1]>0)
		{
			createDir(folders[foldcount][0],folders[foldcount][1]);
		}
		else
		{
			files[filescount][0] = folders[foldcount][0];
			files[filescount][1] = name;
			filescount++;
		}
	}
}
int main()
{
	int dir,ar[max][3];
	int fold = 0,file = 0, k = 0,i;
	printf("Enter 0 for file and 1 for folder\nEnter the name and size of root dir\n");
	scanf("%d%d",&folders[foldcount][0],&folders[foldcount][1]);
	folders[foldcount][2] = -1;
	createDir(folders[foldcount][0],folders[foldcount][1]);
	printf("Enter dir to be searched\n");
	scanf("%d",&dir);
	for(i=0;i<foldcount;i++)
	{
		if(folders[i][2]==dir)
		{
			ar[fold][0] = folders[i][0];
			ar[fold][1] = 1;
			ar[fold][2] = dir;
			fold++;
		}
	}
	k = fold;
	for(i=0;i<filescount;i++)
	{
		if(files[i][1]==dir)
		{
			ar[k][0] = files[i][0];
			ar[k][2] = dir;
			k++;
			file++;
		}
	}
	printf("Dir:%d\n",dir);
	for(i=0;i<k;i++)
	  printf("-----");
	printf("\n");
	for(i=0;i<k;i++)
	  printf("  |  ");
	printf("\n");
	for(i=0;i<k;i++)
	{
		if(ar[i][1]==0)
		  printf("%d(File)  ",ar[i][0]);
		else
		  printf("%d(Folder)  ",ar[i][0]);
	}
	return 0;
}
